Initializing cgroup subsys cpuset
Initializing cgroup subsys cpu
Linux version 2.6.32-754.27.1.el6.i686 (XXX@XXX) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-23) (GCC) ) #1 SMP Tue Jan 28 14:40:29 UTC 2020
KERNEL supported cpus:
  Intel GenuineIntel
  AMD AuthenticAMD
  NSC Geode by NSC
  Cyrix CyrixInstead
  Centaur CentaurHauls
  Transmeta GenuineTMx86
  Transmeta TransmetaCPU
  UMC UMC UMC UMC
BIOS-provided physical RAM map:
 BIOS-e820: 0000000000000000 - 000000000009fc00 (usable)
 BIOS-e820: 000000000009fc00 - 00000000000a0000 (reserved)
 BIOS-e820: 00000000000e0000 - 0000000000100000 (reserved)
 BIOS-e820: 0000000000100000 - 000000005d0cc000 (usable)
 BIOS-e820: 000000005d0cc000 - 000000005d0fb000 (reserved)
 BIOS-e820: 000000005d0fb000 - 000000005d105000 (ACPI data)
 BIOS-e820: 000000005d105000 - 000000005d455000 (ACPI NVS)
 BIOS-e820: 000000005d455000 - 000000005ddd4000 (reserved)
 BIOS-e820: 000000005ddd4000 - 000000005ddd5000 (usable)
 BIOS-e820: 000000005ddd5000 - 000000005dfdb000 (ACPI NVS)
 BIOS-e820: 000000005dfdb000 - 000000005e44c000 (usable)
 BIOS-e820: 000000005e44c000 - 000000005e7dd000 (reserved)
 BIOS-e820: 000000005e7dd000 - 000000005e800000 (usable)
 BIOS-e820: 00000000fec00000 - 00000000fec01000 (reserved)
 BIOS-e820: 00000000fec10000 - 00000000fec11000 (reserved)
 BIOS-e820: 00000000fed00000 - 00000000fed01000 (reserved)
 BIOS-e820: 00000000fed80000 - 00000000fed90000 (reserved)
 BIOS-e820: 00000000ff000000 - 0000000100000000 (reserved)
SMBIOS version 2.7 @ 0xF04C0
SMBIOS 2.7 present.
DMI: Gigabyte Technology Co., Ltd. To be filled by O.E.M./F2A55M-DS2, BIOS F3 09/28/2012
AMI BIOS detected: BIOS may corrupt low RAM, working around it.
e820 update range: 0000000000000000 - 0000000000010000 (usable) ==> (reserved)
e820 update range: 0000000000000000 - 0000000000001000 (usable) ==> (reserved)
e820 remove range: 00000000000a0000 - 0000000000100000 (usable)
last_pfn = 0x5e800 max_arch_pfn = 0x400000
x86 PAT enabled: cpu 0, old 0x7040600070406, new 0x7010600070106
original variable MTRRs
reg 0, base: 0GB, range: 2GB, type WB
reg 1, base: 1512MB, range: 8MB, type UC
reg 2, base: 1520MB, range: 16MB, type UC
reg 3, base: 1536MB, range: 512MB, type UC
total RAM covered: 1512M
Found optimal setting for mtrr clean up
 gran_size: 64K 	chunk_size: 32M 	num_reg: 4  	lose cover RAM: 0G
New variable MTRRs
reg 0, base: 0GB, range: 1GB, type WB
reg 1, base: 1GB, range: 512MB, type WB
reg 2, base: 1512MB, range: 8MB, type UC
reg 3, base: 1520MB, range: 16MB, type UC
initial memory mapped : 0 - 01200000
init_memory_mapping: 0000000000000000-00000000375fe000
NX (Execute Disable) protection: active
 0000000000 - 0000200000 page 4k
 0000200000 - 0037400000 page 2M
 0037400000 - 00375fe000 page 4k
kernel direct mapping tables up to 375fe000 @ 10000-19000
RAMDISK: 36e12000 - 37fefb2a
Allocated new RAMDISK: 00d07000 - 01ee4b2a
Move RAMDISK from 0000000036e12000 - 0000000037fefb29 to 00d07000 - 01ee4b29
ACPI: Deleted _OSI(Windows 2012)
ACPI: Deleted _OSI(Windows 2013)
ACPI: RSDP 000f0490 00024 (v02 ALASKA)
ACPI: XSDT 5d0fd088 0008C (v01 ALASKA    A M I 01072009 AMI  00010013)
ACPI: FACP 5d102850 000F4 (v04 ALASKA    A M I 01072009 AMI  00010013)
ACPI Warning: Optional field Pm2ControlBlock has zero address or length: 0x0000000000000000/0x1 (20090903/tbfadt-565)
ACPI: DSDT 5d0fd1a0 056AC (v02 ALASKA    A M I 00000000 INTL 20051117)
ACPI: FACS 5d44dd80 00040
ACPI: APIC 5d102948 00072 (v03 ALASKA    A M I 01072009 AMI  00010013)
ACPI: FPDT 5d1029c0 00044 (v01 ALASKA    A M I 01072009 AMI  00010013)
ACPI: MCFG 5d102a08 0003C (v01 ALASKA    A M I 01072009 MSFT 00010013)
ACPI: MSDM 5d102a48 00055 (v03 ALASKA    A M I 01072009 AMI  00010013)
ACPI: HPET 5d102aa0 00038 (v01 ALASKA    A M I 01072009 AMI  00000005)
ACPI: MSDM 5d102ad8 00055 (v03 ALASKA    A M I 01072009 AMI  00010013)
ACPI: IFEU 5d102b30 00042 (v01 ALASKA    A M I 01072009      00000000)
ACPI: SSDT 5d102b78 00D40 (v01 AMD    POWERNOW 00000001 AMD  00000001)
ACPI: SSDT 5d1038b8 004B7 (v02    AMD     ALIB 00000001 MSFT 04000000)
ACPI: IVRS 5d103d70 00070 (v02  AMD   AMDIOMMU 00000001 AMD  00000000)
ACPI: CRAT 5d103de0 00280 (v01 AMD    AGESA    00000001 AMD  00000001)
ACPI: BGRT 5d104060 00038 (v00 ALASKA    A M I 01072009 AMI  00010013)
ACPI: Local APIC address 0xfee00000
626MB HIGHMEM available.
885MB LOWMEM available.
  mapped low ram: 0 - 375fe000
  low ram: 0 - 375fe000
  node 0 low ram: 00000000 - 375fe000
  node 0 bootmap 00014000 - 0001aec0
(9 early reservations) ==> bootmem [0000000000 - 00375fe000]
  #0 [0000000000 - 0000001000]   BIOS data page ==> [0000000000 - 0000001000]
  #1 [0000001000 - 0000002000]    EX TRAMPOLINE ==> [0000001000 - 0000002000]
  #2 [0000006000 - 0000007000]       TRAMPOLINE ==> [0000006000 - 0000007000]
  #3 [0000400000 - 0000cfc110]    TEXT DATA BSS ==> [0000400000 - 0000cfc110]
  #4 [000009fc00 - 0000100000]    BIOS reserved ==> [000009fc00 - 0000100000]
  #5 [0000cfd000 - 0000d062e8]              BRK ==> [0000cfd000 - 0000d062e8]
  #6 [0000010000 - 0000014000]          PGTABLE ==> [0000010000 - 0000014000]
  #7 [0000d07000 - 0001ee4b2a]      NEW RAMDISK ==> [0000d07000 - 0001ee4b2a]
  #8 [0000014000 - 000001b000]          BOOTMAP ==> [0000014000 - 000001b000]
found SMP MP-table at [c00fd7b0] fd7b0
crashkernel=auto resulted in zero bytes of reserved memory.
Zone PFN ranges:
  DMA      0x00000010 -> 0x00001000
  Normal   0x00001000 -> 0x000375fe
  HighMem  0x000375fe -> 0x0005e800
Movable zone start PFN for each node
early_node_map[5] active PFN ranges
    0: 0x00000010 -> 0x0000009f
    0: 0x00000100 -> 0x0005d0cc
    0: 0x0005ddd4 -> 0x0005ddd5
    0: 0x0005dfdb -> 0x0005e44c
    0: 0x0005e7dd -> 0x0005e800
On node 0 totalpages: 382192
  DMA zone: 32 pages used for memmap
  DMA zone: 0 pages reserved
  DMA zone: 3951 pages, LIFO batch:0
  Normal zone: 1740 pages used for memmap
  Normal zone: 220978 pages, LIFO batch:31
  HighMem zone: 1253 pages used for memmap
  HighMem zone: 154238 pages, LIFO batch:31
Using APIC driver default
ACPI: PM-Timer IO Port: 0x808
ACPI: Local APIC address 0xfee00000
ACPI: LAPIC (acpi_id[0x01] lapic_id[0x10] enabled)
ACPI: LAPIC (acpi_id[0x02] lapic_id[0x11] enabled)
ACPI: LAPIC (acpi_id[0x03] lapic_id[0x12] enabled)
ACPI: LAPIC (acpi_id[0x04] lapic_id[0x13] enabled)
ACPI: LAPIC_NMI (acpi_id[0xff] high edge lint[0x1])
ACPI: IOAPIC (id[0x05] address[0xfec00000] gsi_base[0])
IOAPIC[0]: apic_id 5, version 33, address 0xfec00000, GSI 0-23
ACPI: INT_SRC_OVR (bus 0 bus_irq 0 global_irq 2 dfl dfl)
ACPI: INT_SRC_OVR (bus 0 bus_irq 9 global_irq 9 low level)
ACPI: IRQ0 used by override.
ACPI: IRQ2 used by override.
ACPI: IRQ9 used by override.
Using ACPI (MADT) for SMP configuration information
ACPI: HPET id: 0x10228210 base: 0xfed00000
SMP: Allowing 4 CPUs, 0 hotplug CPUs
nr_irqs_gsi: 24
PM: Registered nosave memory: 000000000009f000 - 00000000000a0000
PM: Registered nosave memory: 00000000000a0000 - 00000000000e0000
PM: Registered nosave memory: 00000000000e0000 - 0000000000100000
Allocating PCI resources starting at 5e800000 (gap: 5e800000:a0400000)
Booting paravirtualized kernel on bare hardware
NR_CPUS:32 nr_cpumask_bits:32 nr_cpu_ids:4 nr_node_ids:1
PERCPU: Embedded 18 pages/cpu @c2c00000 s49176 r0 d24552 u524288
pcpu-alloc: s49176 r0 d24552 u524288 alloc=1*2097152
pcpu-alloc: [0] 0 1 2 3 
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 379167
Kernel command line: ro root=UUID=XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX LANG=ru_RU.UTF-8 nomodeset rd_NO_LUKS rhgb   KEYBOARDTYPE=pc KEYTABLE=ru selinux=0 console=tty0 console=ttyS0,19200n8
PID hash table entries: 4096 (order: 2, 16384 bytes)
Dentry cache hash table entries: 131072 (order: 7, 524288 bytes)
Inode-cache hash table entries: 65536 (order: 6, 262144 bytes)
Initializing CPU#0
x86/fpu: xstate_offset[2]: 0240, xstate_sizes[2]: 0100
xsave: enabled lazy FPU xstate_bv 0x7, cntxt size 0x340
Initializing HighMem for node 0 (000375fe:0005e800)
Memory: 1486548k/1548288k available (4715k kernel code, 41104k reserved, 2665k data, 584k init, 621964k highmem)
virtual kernel memory layout:
    fixmap  : 0xffad5000 - 0xfffff000   (5288 kB)
    pkmap   : 0xff600000 - 0xff800000   (2048 kB)
    vmalloc : 0xf7dfe000 - 0xff5fe000   ( 120 MB)
    lowmem  : 0xc0000000 - 0xf75fe000   ( 885 MB)
      .init : 0xc0b36000 - 0xc0bc8000   ( 584 kB)
      .data : 0xc089ad66 - 0xc0b35208   (2665 kB)
      .text : 0xc0400000 - 0xc089ad66   (4715 kB)
Checking if this processor honours the WP bit even in supervisor mode...Ok.
Hierarchical RCU implementation.
NR_IRQS:2304 nr_irqs:440
Extended CMOS year: 2000
Console: colour VGA+ 80x25
console [tty0] enabled
console [ttyS0] enabled
allocated 3145728 bytes of page_cgroup
please try 'cgroup_disable=memory' option if you don't want memory cgroups
hpet clockevent registered
Fast TSC calibration using PIT
Detected 3193.969 MHz processor.
Calibrating delay loop (skipped), value calculated using timer frequency.. 6387.93 BogoMIPS (lpj=3193969)
pid_max: default: 32768 minimum: 301
Security Framework initialized
SELinux:  Disabled at boot.
Mount-cache hash table entries: 512
Initializing cgroup subsys ns
Initializing cgroup subsys cpuacct
Initializing cgroup subsys memory
Initializing cgroup subsys devices
Initializing cgroup subsys freezer
Initializing cgroup subsys net_cls
Initializing cgroup subsys blkio
Initializing cgroup subsys perf_event
Initializing cgroup subsys net_prio
mce: CPU supports 7 MCE banks
Speculative Store Bypass: Mitigation: Speculative Store Bypass disabled via prctl
FEATURE SPEC_CTRL Not Present
FEATURE IBPB_SUPPORT Not Present
Spectre V1 : Mitigation: Load fences, usercopy/swapgs barriers and __user pointer sanitization
Spectre V2 : Mitigation: Full AMD retpoline
ACPI: Core revision 20090903
Enabling APIC mode:  Flat.  Using 1 I/O APICs
..TIMER: vector=0x30 apic1=0 pin1=2 apic2=-1 pin2=-1
CPU0: AMD A8-5500 APU with Radeon(tm) HD Graphics     stepping 01
Performance Events: Fam15h core perfctr, AMD PMU driver.
... version:                0
... bit width:              48
... generic registers:      6
... value mask:             0000ffffffffffff
... max period:             00007fffffffffff
... fixed-purpose events:   0
... event mask:             000000000000003f
Booting Node   0, Processors  #1
Initializing CPU#1
 #2
Initializing CPU#2
 #3 Ok.
Initializing CPU#3
Brought up 4 CPUs
Total of 4 processors activated (25551.75 BogoMIPS).
sizeof(vma)=100 bytes
sizeof(page)=32 bytes
sizeof(inode)=352 bytes
sizeof(dentry)=132 bytes
sizeof(ext3inode)=508 bytes
sizeof(buffer_head)=56 bytes
sizeof(skbuff)=184 bytes
sizeof(task_struct)=1360 bytes
devtmpfs: initialized
PM: Registering ACPI NVS region at 5d105000 (3473408 bytes)
PM: Registering ACPI NVS region at 5ddd5000 (2121728 bytes)
regulator: core version 0.5
NET: Registered protocol family 16
ACPI: bus type pci registered
PCI: MCFG configuration 0: base e0000000 segment 0 buses 0 - 255
PCI: Not using MMCONFIG.
PCI: Using configuration type 1 for base access
PCI: Using configuration type 1 for extended access
bio: create slab <bio-0> at 0
ACPI: EC: Look up EC in DSDT
ACPI: Executed 1 blocks of module-level executable AML code
ACPI: BIOS _OSI(Linux) query ignored
ACPI: Interpreter enabled
ACPI: (supports S0 S3 S4 S5)
ACPI: Using IOAPIC for interrupt routing
PCI: MCFG configuration 0: base e0000000 segment 0 buses 0 - 255
PCI: MCFG area at e0000000 reserved in ACPI motherboard resources
PCI: Using MMCONFIG for extended config space
ACPI: No dock devices found.
PCI: Using host bridge windows from ACPI; if necessary, use "pci=nocrs" and report a bug
ACPI: PCI Root Bridge [PCI0] (domain 0000 [bus 00-ff])
pci_root PNP0A03:00: host bridge window [io  0x0000-0x03af]
pci_root PNP0A03:00: host bridge window [io  0x03e0-0x0cf7]
pci_root PNP0A03:00: host bridge window [io  0x03b0-0x03df]
pci_root PNP0A03:00: host bridge window [io  0x0d00-0xffff]
pci_root PNP0A03:00: host bridge window [mem 0x000a0000-0x000bffff]
pci_root PNP0A03:00: host bridge window [mem 0x000c0000-0x000dffff]
pci_root PNP0A03:00: host bridge window [mem 0x7f000000-0xffffffff]
PCI host bridge to bus 0000:00
pci_bus 0000:00: root bus resource [io  0x0000-0x03af]
pci_bus 0000:00: root bus resource [io  0x03e0-0x0cf7]
pci_bus 0000:00: root bus resource [io  0x03b0-0x03df]
pci_bus 0000:00: root bus resource [io  0x0d00-0xffff]
pci_bus 0000:00: root bus resource [mem 0x000a0000-0x000bffff]
pci_bus 0000:00: root bus resource [mem 0x000c0000-0x000dffff]
pci_bus 0000:00: root bus resource [mem 0x7f000000-0xffffffff]
pci 0000:00:01.0: reg 10: [mem 0xc0000000-0xcfffffff pref]
pci 0000:00:01.0: reg 14: [io  0xf000-0xf0ff]
pci 0000:00:01.0: reg 18: [mem 0xfeb00000-0xfeb3ffff]
pci 0000:00:01.0: supports D1 D2
pci 0000:00:01.1: reg 10: [mem 0xfeb44000-0xfeb47fff]
pci 0000:00:01.1: supports D1 D2
pci 0000:00:02.0: PME# supported from D0 D3hot D3cold
pci 0000:00:02.0: PME# disabled
pci 0000:00:04.0: PME# supported from D0 D3hot D3cold
pci 0000:00:04.0: PME# disabled
pci 0000:00:11.0: reg 10: [io  0xf190-0xf197]
pci 0000:00:11.0: reg 14: [io  0xf180-0xf183]
pci 0000:00:11.0: reg 18: [io  0xf170-0xf177]
pci 0000:00:11.0: reg 1c: [io  0xf160-0xf163]
pci 0000:00:11.0: reg 20: [io  0xf150-0xf15f]
pci 0000:00:11.0: reg 24: [mem 0xfeb4f000-0xfeb4f7ff]
pci 0000:00:11.0: set SATA to AHCI mode
pci 0000:00:12.0: reg 10: [mem 0xfeb4e000-0xfeb4efff]
pci 0000:00:12.2: reg 10: [mem 0xfeb4d000-0xfeb4d0ff]
pci 0000:00:12.2: supports D1 D2
pci 0000:00:12.2: PME# supported from D0 D1 D2 D3hot
pci 0000:00:12.2: PME# disabled
pci 0000:00:13.0: reg 10: [mem 0xfeb4c000-0xfeb4cfff]
pci 0000:00:13.2: reg 10: [mem 0xfeb4b000-0xfeb4b0ff]
pci 0000:00:13.2: supports D1 D2
pci 0000:00:13.2: PME# supported from D0 D1 D2 D3hot
pci 0000:00:13.2: PME# disabled
pci 0000:00:14.1: reg 10: [io  0xf140-0xf147]
pci 0000:00:14.1: reg 14: [io  0xf130-0xf133]
pci 0000:00:14.1: reg 18: [io  0xf120-0xf127]
pci 0000:00:14.1: reg 1c: [io  0xf110-0xf113]
pci 0000:00:14.1: reg 20: [io  0xf100-0xf10f]
pci 0000:00:14.2: reg 10: [mem 0xfeb40000-0xfeb43fff 64bit]
pci 0000:00:14.2: PME# supported from D0 D3hot D3cold
pci 0000:00:14.2: PME# disabled
pci 0000:00:14.5: reg 10: [mem 0xfeb4a000-0xfeb4afff]
pci 0000:00:16.0: reg 10: [mem 0xfeb49000-0xfeb49fff]
pci 0000:00:16.2: reg 10: [mem 0xfeb48000-0xfeb480ff]
pci 0000:00:16.2: supports D1 D2
pci 0000:00:16.2: PME# supported from D0 D1 D2 D3hot
pci 0000:00:16.2: PME# disabled
pci 0000:01:00.0: reg 10: [io  0xe000-0xe0ff]
pci 0000:01:00.0: reg 18: [mem 0xfea00000-0xfea00fff 64bit]
pci 0000:01:00.0: reg 20: [mem 0xd0100000-0xd0103fff 64bit pref]
pci 0000:01:00.0: supports D1 D2
pci 0000:01:00.0: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:01:00.0: PME# disabled
pci 0000:00:02.0: PCI bridge to [bus 01-01]
pci 0000:00:02.0:   bridge window [io  0xe000-0xefff]
pci 0000:00:02.0:   bridge window [mem 0xfea00000-0xfeafffff]
pci 0000:00:02.0:   bridge window [mem 0xd0100000-0xd01fffff 64bit pref]
pci 0000:02:00.0: reg 10: [io  0xd000-0xd0ff]
pci 0000:02:00.0: reg 18: [mem 0xd0004000-0xd0004fff 64bit pref]
pci 0000:02:00.0: reg 20: [mem 0xd0000000-0xd0003fff 64bit pref]
pci 0000:02:00.0: supports D1 D2
pci 0000:02:00.0: PME# supported from D0 D1 D2 D3hot D3cold
pci 0000:02:00.0: PME# disabled
pci 0000:00:04.0: PCI bridge to [bus 02-02]
pci 0000:00:04.0:   bridge window [io  0xd000-0xdfff]
pci 0000:00:04.0:   bridge window [mem 0xd0000000-0xd00fffff 64bit pref]
pci 0000:03:06.0: reg 10: [io  0xc000-0xc0ff]
pci 0000:03:06.0: reg 14: [mem 0xfe920000-0xfe9200ff]
pci 0000:03:06.0: reg 30: [mem 0xfe900000-0xfe91ffff pref]
pci 0000:03:06.0: supports D1 D2
pci 0000:03:06.0: PME# supported from D1 D2 D3hot
pci 0000:03:06.0: PME# disabled
pci 0000:00:14.4: PCI bridge to [bus 03-03] (subtractive decode)
pci 0000:00:14.4:   bridge window [io  0xc000-0xcfff]
pci 0000:00:14.4:   bridge window [mem 0xfe900000-0xfe9fffff]
pci 0000:00:14.4:   bridge window [io  0x0000-0x03af] (subtractive decode)
pci 0000:00:14.4:   bridge window [io  0x03e0-0x0cf7] (subtractive decode)
pci 0000:00:14.4:   bridge window [io  0x03b0-0x03df] (subtractive decode)
pci 0000:00:14.4:   bridge window [io  0x0d00-0xffff] (subtractive decode)
pci 0000:00:14.4:   bridge window [mem 0x000a0000-0x000bffff] (subtractive decode)
pci 0000:00:14.4:   bridge window [mem 0x000c0000-0x000dffff] (subtractive decode)
pci 0000:00:14.4:   bridge window [mem 0x7f000000-0xffffffff] (subtractive decode)
pci_bus 0000:00: on NUMA node 0
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.P0PC._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.BR12._PRT]
ACPI: PCI Interrupt Routing Table [\_SB_.PCI0.BR14._PRT]
 pci0000:00: Requesting ACPI _OSC control (0x1d)
 pci0000:00: ACPI _OSC control (0x1d) granted
ACPI: PCI Interrupt Link [LNKA] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKB] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKC] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKD] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKE] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKF] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKG] (IRQs 4 5 7 10 11 14 15) *0
ACPI: PCI Interrupt Link [LNKH] (IRQs 4 5 7 10 11 14 15) *0
vgaarb: device added: PCI:0000:00:01.0,decodes=io+mem,owns=io+mem,locks=none
vgaarb: loaded
vgaarb: bridge control possible 0000:00:01.0
SCSI subsystem initialized
libata version 3.00 loaded.
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
PCI: Using ACPI for IRQ routing
PCI: pci_cache_line_size set to 64 bytes
NetLabel: Initializing
NetLabel:  domain hash size = 128
NetLabel:  protocols = UNLABELED CIPSOv4
NetLabel:  unlabeled traffic allowed by default
HPET: 3 timers in total, 0 timers will be used for per-cpu timer
hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0
hpet0: 3 comparators, 32-bit 14.318180 MHz counter
Switching to clocksource hpet
pnp: PnP ACPI init
ACPI: bus type pnp registered
pnp 00:00: [io  0x0cf8-0x0cff]
pnp 00:00: Plug and Play ACPI device, IDs PNP0a03 (active)
pnp 00:01: [mem 0xe0000000-0xefffffff]
pnp 00:01: Plug and Play ACPI device, IDs PNP0c01 (active)
pnp 00:02: [io  0x0010-0x001f]
pnp 00:02: [io  0x0022-0x003f]
pnp 00:02: [io  0x0063]
pnp 00:02: [io  0x0065]
pnp 00:02: [io  0x0067-0x006f]
pnp 00:02: [io  0x0072-0x007f]
pnp 00:02: [io  0x0080]
pnp 00:02: [io  0x0084-0x0086]
pnp 00:02: [io  0x0088]
pnp 00:02: [io  0x008c-0x008e]
pnp 00:02: [io  0x0090-0x009f]
pnp 00:02: [io  0x00a2-0x00bf]
pnp 00:02: [io  0x00b1]
pnp 00:02: [io  0x00e0-0x00ef]
pnp 00:02: [io  0x04d0-0x04d1]
pnp 00:02: [io  0x040b]
pnp 00:02: [io  0x04d6]
pnp 00:02: [io  0x0c00-0x0c01]
pnp 00:02: [io  0x0c14]
pnp 00:02: [io  0x0c50-0x0c51]
pnp 00:02: [io  0x0c52]
pnp 00:02: [io  0x0c6c]
pnp 00:02: [io  0x0c6f]
pnp 00:02: [io  0x0cd0-0x0cd1]
pnp 00:02: [io  0x0cd2-0x0cd3]
pnp 00:02: [io  0x0cd4-0x0cd5]
pnp 00:02: [io  0x0cd6-0x0cd7]
pnp 00:02: [io  0x0cd8-0x0cdf]
pnp 00:02: [io  0x0800-0x089f]
pnp 00:02: [io  0x0000-0xffffffffffffffff disabled]
pnp 00:02: [io  0x0000-0x000f]
pnp 00:02: [io  0x0b20-0x0b3f]
pnp 00:02: [io  0x0900-0x090f]
pnp 00:02: [io  0x0910-0x091f]
pnp 00:02: [io  0xfe00-0xfefe]
pnp 00:02: [io  0x0060-0x005f disabled]
pnp 00:02: [io  0x0064-0x0063 disabled]
pnp 00:02: [mem 0xfec00000-0xfec00fff]
pnp 00:02: [mem 0xfee00000-0xfee00fff]
pnp 00:02: [mem 0xfed80000-0xfed8ffff]
pnp 00:02: [mem 0xfed61000-0xfed70fff]
pnp 00:02: [mem 0xfec10000-0xfec10fff]
pnp 00:02: [mem 0xfed00000-0xfed00fff]
pnp 00:02: [mem 0xff000000-0xffffffff]
pnp 00:02: Plug and Play ACPI device, IDs PNP0c02 (active)
pnp 00:03: [io  0x0000-0xffffffffffffffff disabled]
pnp 00:03: [io  0x0220-0x0227]
pnp 00:03: [io  0x0228-0x0237]
pnp 00:03: [io  0x0a20-0x0a2f]
pnp 00:03: Plug and Play ACPI device, IDs PNP0c02 (active)
pnp 00:04: [io  0x03f8-0x03ff]
pnp 00:04: [irq 4]
pnp 00:04: [dma 0 disabled]
pnp 00:04: Plug and Play ACPI device, IDs PNP0501 (active)
pnp 00:05: [dma 4]
pnp 00:05: [io  0x0000-0x000f]
pnp 00:05: [io  0x0081-0x0083]
pnp 00:05: [io  0x0087]
pnp 00:05: [io  0x0089-0x008b]
pnp 00:05: [io  0x008f]
pnp 00:05: [io  0x00c0-0x00df]
pnp 00:05: Plug and Play ACPI device, IDs PNP0200 (active)
pnp 00:06: [io  0x0070-0x0071]
pnp 00:06: [irq 8]
pnp 00:06: Plug and Play ACPI device, IDs PNP0b00 (active)
pnp 00:07: [io  0x0061]
pnp 00:07: Plug and Play ACPI device, IDs PNP0800 (active)
pnp 00:08: [io  0x0010-0x001f]
pnp 00:08: [io  0x0022-0x003f]
pnp 00:08: [io  0x0044-0x005f]
pnp 00:08: [io  0x0072-0x007f]
pnp 00:08: [io  0x0080]
pnp 00:08: [io  0x0084-0x0086]
pnp 00:08: [io  0x0088]
pnp 00:08: [io  0x008c-0x008e]
pnp 00:08: [io  0x0090-0x009f]
pnp 00:08: [io  0x00a2-0x00bf]
pnp 00:08: [io  0x00e0-0x00ef]
pnp 00:08: [io  0x04d0-0x04d1]
pnp 00:08: Plug and Play ACPI device, IDs PNP0c02 (active)
pnp 00:09: [io  0x00f0-0x00ff]
pnp 00:09: [irq 13]
pnp 00:09: Plug and Play ACPI device, IDs PNP0c04 (active)
pnp 00:0a: Plug and Play ACPI device, IDs PNP0c02 (active)
pnp 00:0b: [mem 0x5f000000-0x7effffff]
pnp 00:0b: Plug and Play ACPI device, IDs PNP0c02 (active)
pnp 00:0c: [mem 0xfeb80000-0xfebfffff]
pnp 00:0c: Plug and Play ACPI device, IDs PNP0c02 (active)
pnp: PnP ACPI: found 13 devices
ACPI: ACPI bus type pnp unregistered
system 00:01: [mem 0xe0000000-0xefffffff] has been reserved
system 00:02: [io  0x04d0-0x04d1] has been reserved
system 00:02: [io  0x040b] has been reserved
system 00:02: [io  0x04d6] has been reserved
system 00:02: [io  0x0c00-0x0c01] has been reserved
system 00:02: [io  0x0c14] has been reserved
system 00:02: [io  0x0c50-0x0c51] has been reserved
system 00:02: [io  0x0c52] has been reserved
system 00:02: [io  0x0c6c] has been reserved
system 00:02: [io  0x0c6f] has been reserved
system 00:02: [io  0x0cd0-0x0cd1] has been reserved
system 00:02: [io  0x0cd2-0x0cd3] has been reserved
system 00:02: [io  0x0cd4-0x0cd5] has been reserved
system 00:02: [io  0x0cd6-0x0cd7] has been reserved
system 00:02: [io  0x0cd8-0x0cdf] has been reserved
system 00:02: [io  0x0800-0x089f] has been reserved
system 00:02: [io  0x0b20-0x0b3f] has been reserved
system 00:02: [io  0x0900-0x090f] has been reserved
system 00:02: [io  0x0910-0x091f] has been reserved
system 00:02: [io  0xfe00-0xfefe] has been reserved
system 00:02: [mem 0xfec00000-0xfec00fff] could not be reserved
system 00:02: [mem 0xfee00000-0xfee00fff] has been reserved
system 00:02: [mem 0xfed80000-0xfed8ffff] has been reserved
system 00:02: [mem 0xfed61000-0xfed70fff] has been reserved
system 00:02: [mem 0xfec10000-0xfec10fff] has been reserved
system 00:02: [mem 0xfed00000-0xfed00fff] has been reserved
system 00:02: [mem 0xff000000-0xffffffff] has been reserved
system 00:03: [io  0x0220-0x0227] has been reserved
system 00:03: [io  0x0228-0x0237] has been reserved
system 00:03: [io  0x0a20-0x0a2f] has been reserved
system 00:08: [io  0x04d0-0x04d1] has been reserved
system 00:0b: [mem 0x5f000000-0x7effffff] could not be reserved
system 00:0c: [mem 0xfeb80000-0xfebfffff] has been reserved
pci 0000:00:02.0: PCI bridge to [bus 01-01]
pci 0000:00:02.0:   bridge window [io  0xe000-0xefff]
pci 0000:00:02.0:   bridge window [mem 0xfea00000-0xfeafffff]
pci 0000:00:02.0:   bridge window [mem 0xd0100000-0xd01fffff 64bit pref]
pci 0000:00:04.0: PCI bridge to [bus 02-02]
pci 0000:00:04.0:   bridge window [io  0xd000-0xdfff]
pci 0000:00:04.0:   bridge window [mem 0xd0000000-0xd00fffff 64bit pref]
pci 0000:00:14.4: PCI bridge to [bus 03-03]
pci 0000:00:14.4:   bridge window [io  0xc000-0xcfff]
pci 0000:00:14.4:   bridge window [mem 0xfe900000-0xfe9fffff]
  alloc irq_desc for 18 on node -1
  alloc kstat_irqs on node -1
pci 0000:00:02.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:02.0: setting latency timer to 64
  alloc irq_desc for 16 on node -1
  alloc kstat_irqs on node -1
pci 0000:00:04.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
pci 0000:00:04.0: setting latency timer to 64
pci_bus 0000:00: resource 4 [io  0x0000-0x03af]
pci_bus 0000:00: resource 5 [io  0x03e0-0x0cf7]
pci_bus 0000:00: resource 6 [io  0x03b0-0x03df]
pci_bus 0000:00: resource 7 [io  0x0d00-0xffff]
pci_bus 0000:00: resource 8 [mem 0x000a0000-0x000bffff]
pci_bus 0000:00: resource 9 [mem 0x000c0000-0x000dffff]
pci_bus 0000:00: resource 10 [mem 0x7f000000-0xffffffff]
pci_bus 0000:01: resource 0 [io  0xe000-0xefff]
pci_bus 0000:01: resource 1 [mem 0xfea00000-0xfeafffff]
pci_bus 0000:01: resource 2 [mem 0xd0100000-0xd01fffff 64bit pref]
pci_bus 0000:02: resource 0 [io  0xd000-0xdfff]
pci_bus 0000:02: resource 2 [mem 0xd0000000-0xd00fffff 64bit pref]
pci_bus 0000:03: resource 0 [io  0xc000-0xcfff]
pci_bus 0000:03: resource 1 [mem 0xfe900000-0xfe9fffff]
pci_bus 0000:03: resource 4 [io  0x0000-0x03af]
pci_bus 0000:03: resource 5 [io  0x03e0-0x0cf7]
pci_bus 0000:03: resource 6 [io  0x03b0-0x03df]
pci_bus 0000:03: resource 7 [io  0x0d00-0xffff]
pci_bus 0000:03: resource 8 [mem 0x000a0000-0x000bffff]
pci_bus 0000:03: resource 9 [mem 0x000c0000-0x000dffff]
pci_bus 0000:03: resource 10 [mem 0x7f000000-0xffffffff]
NET: Registered protocol family 2
IP route cache hash table entries: 32768 (order: 5, 131072 bytes)
TCP established hash table entries: 131072 (order: 8, 1048576 bytes)
TCP bind hash table entries: 65536 (order: 7, 524288 bytes)
TCP: Hash tables configured (established 131072 bind 65536)
TCP reno registered
NET: Registered protocol family 1
pci 0000:00:01.0: Boot video device
pci 0000:00:12.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:12.0: PCI INT A disabled
  alloc irq_desc for 17 on node -1
  alloc kstat_irqs on node -1
pci 0000:00:12.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:12.2: PCI INT B disabled
pci 0000:00:13.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:13.0: PCI INT A disabled
pci 0000:00:13.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:13.2: PCI INT B disabled
pci 0000:00:14.5: PCI INT C -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:14.5: PCI INT C disabled
pci 0000:00:16.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
pci 0000:00:16.0: PCI INT A disabled
pci 0000:00:16.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:16.2: PCI INT B disabled
Trying to unpack rootfs image as initramfs...
Freeing initrd memory: 18294k freed
perf: AMD NB counters detected
apm: BIOS not found.
futex hash table entries: 1024 (order: 3, 32768 bytes)
audit: initializing netlink socket (disabled)
type=2000 audit(1619880864.798:1): initialized
highmem bounce pool size: 64 pages
HugeTLB registered 2 MB page size, pre-allocated 0 pages
VFS: Disk quotas dquot_6.5.2
Dquot-cache hash table entries: 1024 (order 0, 4096 bytes)
msgmni has been set to 1726
ksign: Installing public key data
Loading keyring
- Added public key 9677C84F30910303
- User ID: CentOS (Kernel Module GPG key)
Block layer SCSI generic (bsg) driver version 0.4 loaded (major 250)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
pcieport 0000:00:02.0: setting latency timer to 64
  alloc irq_desc for 24 on node -1
  alloc kstat_irqs on node -1
pcieport 0000:00:02.0: irq 24 for MSI/MSI-X
pcieport 0000:00:04.0: setting latency timer to 64
  alloc irq_desc for 25 on node -1
  alloc kstat_irqs on node -1
pcieport 0000:00:04.0: irq 25 for MSI/MSI-X
pci_hotplug: PCI Hot Plug PCI Core version: 0.5
pciehp: PCI Express Hot Plug Controller Driver version: 0.4
acpiphp: ACPI Hot Plug PCI Controller Driver version: 0.5
input: Power Button as /devices/LNXSYSTM:00/LNXSYBUS:00/PNP0C0C:00/input/input0
ACPI: Power Button [PWRB]
input: Power Button as /devices/LNXSYSTM:00/LNXPWRBN:00/input/input1
ACPI: Power Button [PWRF]
ACPI: acpi_idle registered with cpuidle
[Firmware Bug]: No valid trip found
GHES: HEST is not enabled!
isapnp: Scanning for PnP cards...
Refined TSC clocksource calibration: 3194.191 MHz.
Switching to clocksource tsc
isapnp: No Plug & Play device found
Non-volatile memory driver v1.3
Linux agpgart interface v0.103
crash memory driver: version 1.1
Serial: 8250/16550 driver, 4 ports, IRQ sharing enabled
serial8250: ttyS0 at I/O 0x3f8 (irq = 0) is a 16550A
00:04: ttyS0 at I/O 0x3f8 (irq = 4) is a 16550A
brd: module loaded
loop: module loaded
input: Macintosh mouse button emulation as /devices/virtual/input/input2
Fixed MDIO Bus: probed
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
ehci_hcd 0000:00:12.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
ehci_hcd 0000:00:12.2: EHCI Host Controller
ehci_hcd 0000:00:12.2: new USB bus registered, assigned bus number 1
ehci_hcd 0000:00:12.2: applying AMD SB700/SB800/Hudson-2/3 EHCI dummy qh workaround
QUIRK: Enable AMD PLL fix
ehci_hcd 0000:00:12.2: debug port 1
ehci_hcd 0000:00:12.2: irq 17, io mem 0xfeb4d000
ehci_hcd 0000:00:12.2: USB 2.0 started, EHCI 1.00
usb usb1: New USB device found, idVendor=1d6b, idProduct=0002
usb usb1: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb1: Product: EHCI Host Controller
usb usb1: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ehci_hcd
usb usb1: SerialNumber: ...
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 5 ports detected
ehci_hcd 0000:00:13.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
ehci_hcd 0000:00:13.2: EHCI Host Controller
ehci_hcd 0000:00:13.2: new USB bus registered, assigned bus number 2
ehci_hcd 0000:00:13.2: applying AMD SB700/SB800/Hudson-2/3 EHCI dummy qh workaround
ehci_hcd 0000:00:13.2: debug port 1
ehci_hcd 0000:00:13.2: irq 17, io mem 0xfeb4b000
ehci_hcd 0000:00:13.2: USB 2.0 started, EHCI 1.00
usb usb2: New USB device found, idVendor=1d6b, idProduct=0002
usb usb2: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb2: Product: EHCI Host Controller
usb usb2: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ehci_hcd
usb usb2: SerialNumber: ...
usb usb2: configuration #1 chosen from 1 choice
hub 2-0:1.0: USB hub found
hub 2-0:1.0: 5 ports detected
ehci_hcd 0000:00:16.2: PCI INT B -> GSI 17 (level, low) -> IRQ 17
ehci_hcd 0000:00:16.2: EHCI Host Controller
ehci_hcd 0000:00:16.2: new USB bus registered, assigned bus number 3
ehci_hcd 0000:00:16.2: applying AMD SB700/SB800/Hudson-2/3 EHCI dummy qh workaround
ehci_hcd 0000:00:16.2: debug port 1
ehci_hcd 0000:00:16.2: irq 17, io mem 0xfeb48000
ehci_hcd 0000:00:16.2: USB 2.0 started, EHCI 1.00
usb usb3: New USB device found, idVendor=1d6b, idProduct=0002
usb usb3: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb3: Product: EHCI Host Controller
usb usb3: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ehci_hcd
usb usb3: SerialNumber: ...
usb usb3: configuration #1 chosen from 1 choice
hub 3-0:1.0: USB hub found
hub 3-0:1.0: 4 ports detected
ohci_hcd: USB 1.1 'Open' Host Controller (OHCI) Driver
ohci_hcd 0000:00:12.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
ohci_hcd 0000:00:12.0: OHCI Host Controller
ohci_hcd 0000:00:12.0: new USB bus registered, assigned bus number 4
ohci_hcd 0000:00:12.0: irq 18, io mem 0xfeb4e000
usb usb4: New USB device found, idVendor=1d6b, idProduct=0001
usb usb4: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb4: Product: OHCI Host Controller
usb usb4: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ohci_hcd
usb usb4: SerialNumber: ...
usb usb4: configuration #1 chosen from 1 choice
hub 4-0:1.0: USB hub found
hub 4-0:1.0: 5 ports detected
ohci_hcd 0000:00:13.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
ohci_hcd 0000:00:13.0: OHCI Host Controller
ohci_hcd 0000:00:13.0: new USB bus registered, assigned bus number 5
ohci_hcd 0000:00:13.0: irq 18, io mem 0xfeb4c000
usb usb5: New USB device found, idVendor=1d6b, idProduct=0001
usb usb5: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb5: Product: OHCI Host Controller
usb usb5: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ohci_hcd
usb usb5: SerialNumber: ...
usb usb5: configuration #1 chosen from 1 choice
hub 5-0:1.0: USB hub found
hub 5-0:1.0: 5 ports detected
ohci_hcd 0000:00:14.5: PCI INT C -> GSI 18 (level, low) -> IRQ 18
ohci_hcd 0000:00:14.5: OHCI Host Controller
ohci_hcd 0000:00:14.5: new USB bus registered, assigned bus number 6
ohci_hcd 0000:00:14.5: irq 18, io mem 0xfeb4a000
usb usb6: New USB device found, idVendor=1d6b, idProduct=0001
usb usb6: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb6: Product: OHCI Host Controller
usb usb6: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ohci_hcd
usb usb6: SerialNumber: ...
usb usb6: configuration #1 chosen from 1 choice
hub 6-0:1.0: USB hub found
hub 6-0:1.0: 2 ports detected
ohci_hcd 0000:00:16.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
ohci_hcd 0000:00:16.0: OHCI Host Controller
ohci_hcd 0000:00:16.0: new USB bus registered, assigned bus number 7
ohci_hcd 0000:00:16.0: irq 18, io mem 0xfeb49000
usb usb7: New USB device found, idVendor=1d6b, idProduct=0001
usb usb7: New USB device strings: Mfr=3, Product=2, SerialNumber=...
usb usb7: Product: OHCI Host Controller
usb usb7: Manufacturer: Linux 2.6.32-754.27.1.el6.i686 ohci_hcd
usb usb7: SerialNumber: ...
usb usb7: configuration #1 chosen from 1 choice
hub 7-0:1.0: USB hub found
hub 7-0:1.0: 4 ports detected
uhci_hcd: USB Universal Host Controller Interface driver
PNP: No PS/2 controller found. Probing ports directly.
serio: i8042 KBD port at 0x60,0x64 irq 1
serio: i8042 AUX port at 0x60,0x64 irq 12
mice: PS/2 mouse device common for all mice
rtc_cmos 00:06: RTC can wake from S4
rtc_cmos 00:06: rtc core: registered rtc_cmos as rtc0
rtc0: alarms up to one month, y3k, 114 bytes nvram, hpet irqs
cpuidle: using governor ladder
cpuidle: using governor menu
EFI Variables Facility v0.08 2004-May-17
usbcore: registered new interface driver hiddev
usbcore: registered new interface driver usbhid
usbhid: v2.6:USB HID core driver
GRE over IPv4 demultiplexor driver
TCP cubic registered
Initializing XFRM netlink socket
NET: Registered protocol family 17
Using IPI No-Shortcut mode
registered taskstats version 1
rtc_cmos 00:06: setting system clock to 2021-05-01 14:54:37 UTC (1619880877)
Initalizing network drop monitor service
Freeing unused kernel memory: 584k freed
Write protecting the kernel text: 4716k
Write protecting the kernel read-only data: 2024k
dracut: dracut-004-409.el6_8.2
dracut: rd_NO_LUKS: removing cryptoluks activation
device-mapper: uevent: version 1.0.3
device-mapper: ioctl: 4.33.1-ioctl (2015-8-18) initialised: XXX@XXX
udev: starting version 147
[drm] Initialized drm 1.1.0 20060810
[drm] VGACON disable radeon kernel modesetting.
[drm] radeon userspace modesetting enabled.
pci 0000:00:01.0: PCI INT A -> GSI 17 (level, low) -> IRQ 17
pci 0000:00:01.0: setting latency timer to 64
[drm] Supports vblank timestamp caching Rev 2 (21.10.2013).
[drm] No driver support for vblank timestamp query.
[drm] Initialized radeon 1.34.0 20080528 for 0000:00:01.0 on minor 0
dracut: Starting plymouth daemon
ahci 0000:00:11.0: version 3.0
  alloc irq_desc for 19 on node -1
  alloc kstat_irqs on node -1
ahci 0000:00:11.0: PCI INT A -> GSI 19 (level, low) -> IRQ 19
ahci 0000:00:11.0: AHCI 0001.0300 32 slots 3 ports 3 Gbps 0xd impl SATA mode
ahci 0000:00:11.0: flags: 64bit ncq sntf ilck pm led clo pmp pio slum part 
scsi0 : ahci
scsi1 : ahci
scsi2 : ahci
scsi3 : ahci
ata1: SATA max UDMA/133 irq_stat 0x00400040, connection status changed irq 19
ata2: DUMMY
ata3: SATA max UDMA/133 irq_stat 0x00400000, PHY RDY changed irq 19
ata4: SATA max UDMA/133 abar m2048@0xfeb4f000 port 0xfeb4f280 irq 19
ata4: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
ata4.00: ATA-9: WDC WD10JFCX-68N6GN0, 82.00A82, max UDMA/133
ata4.00: 1953525168 sectors, multi 16: LBA48 NCQ (depth 31/32), AA
ata4.00: configured for UDMA/133
ata1: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
ata3: SATA link up 3.0 Gbps (SStatus 123 SControl 300)
ata1.00: ATA-9: WDC WD10EFRX-68FYTN0, 82.00A82, max UDMA/133
ata1.00: 1953525168 sectors, multi 16: LBA48 NCQ (depth 31/32), AA
ata3.00: ATA-9: WDC WD10JFCX-68N6GN0, 82.00A82, max UDMA/133
ata3.00: 1953525168 sectors, multi 16: LBA48 NCQ (depth 31/32), AA
ata1.00: configured for UDMA/133
scsi 0:0:0:0: Direct-Access     ATA      WDC WD10EFRX-68F 0A82 PQ: 0 ANSI: 5
ata3.00: configured for UDMA/133
scsi 2:0:0:0: Direct-Access     ATA      WDC WD10JFCX-68N 0A82 PQ: 0 ANSI: 5
scsi 3:0:0:0: Direct-Access     ATA      WDC WD10JFCX-68N 0A82 PQ: 0 ANSI: 5
pata_atiixp 0000:00:14.1: PCI INT B -> GSI 17 (level, low) -> IRQ 17
scsi4 : pata_atiixp
scsi5 : pata_atiixp
ata5: PATA max UDMA/100 cmd 0x1f0 ctl 0x3f6 bmdma 0xf100 irq 14
ata6: PATA max UDMA/100 cmd 0x170 ctl 0x376 bmdma 0xf108 irq 15
sd 0:0:0:0: [sda] 1953525168 512-byte logical blocks: (1.00 TB/931 GiB)
sd 3:0:0:0: [sdc] 1953525168 512-byte logical blocks: (1.00 TB/931 GiB)
sd 3:0:0:0: [sdc] 4096-byte physical blocks
sd 2:0:0:0: [sdb] 1953525168 512-byte logical blocks: (1.00 TB/931 GiB)
sd 2:0:0:0: [sdb] 4096-byte physical blocks
sd 3:0:0:0: [sdc] Write Protect is off
sd 3:0:0:0: [sdc] Mode Sense: 00 3a 00 00
sd 2:0:0:0: [sdb] Write Protect is off
sd 2:0:0:0: [sdb] Mode Sense: 00 3a 00 00
sd 3:0:0:0: [sdc] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
sd 2:0:0:0: [sdb] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 sdb:
 sdc: sdc1 sdc2 sdc3 sdc4 < sdb1 sdb2 sdb3 sdb4 < sdb5 sdc5 sdb6 >
 sdc6
sd 0:0:0:0: [sda] 4096-byte physical blocks
sd 0:0:0:0: [sda] Write Protect is off
sd 0:0:0:0: [sda] Mode Sense: 00 3a 00 00
sd 0:0:0:0: [sda] Write cache: enabled, read cache: enabled, doesn't support DPO or FUA
 >
 sda:
sd 3:0:0:0: [sdc] Attached SCSI disk
sd 2:0:0:0: [sdb] Attached SCSI disk
 sda1
sd 0:0:0:0: [sda] Attached SCSI disk
md: bind<sdb3>
md: bind<sdb6>
md: bind<sdb2>
md: bind<sdc2>
md: raid1 personality registered for level 1
bio: create slab <bio-1> at 1
md/raid1:md2: active with 2 out of 2 mirrors
md2: detected capacity change from 0 to 33284874240
 md2: unknown partition table
md: bind<sdc6>
md/raid1:md6: active with 2 out of 2 mirrors
md6: detected capacity change from 0 to 943839592448
 md6: unknown partition table
md: bind<sdc3>
md/raid1:md3: active with 2 out of 2 mirrors
md3: detected capacity change from 0 to 20399972352
 md3: unknown partition table
EXT4-fs (md2): mounted filesystem with ordered data mode. Opts: 
dracut: Mounted root filesystem /dev/md2
dracut: Switching root
udev: starting version 147
r8169 Gigabit Ethernet driver 2.3LK-NAPI loaded
r8169 0000:01:00.0: PCI INT A -> GSI 18 (level, low) -> IRQ 18
r8169 0000:01:00.0: setting latency timer to 64
  alloc irq_desc for 26 on node -1
  alloc kstat_irqs on node -1
r8169 0000:01:00.0: irq 26 for MSI/MSI-X
r8169 0000:01:00.0: eth0: RTL8168e/8111e at 0xf859c000, XX:XX:XX:XX:XX:XX, XID 0c200000 IRQ 26
r8169 0000:01:00.0: eth0: jumbo features [frames: 9200 bytes, tx checksumming: ko]
r8169 Gigabit Ethernet driver 2.3LK-NAPI loaded
r8169 0000:02:00.0: PCI INT A -> GSI 16 (level, low) -> IRQ 16
r8169 0000:02:00.0: setting latency timer to 64
  alloc irq_desc for 27 on node -1
  alloc kstat_irqs on node -1
r8169 0000:02:00.0: irq 27 for MSI/MSI-X
r8169 0000:02:00.0: eth1: RTL8168evl/8111evl at 0xf859e000, XX:XX:XX:XX:XX:XX, XID 0c900800 IRQ 27
r8169 0000:02:00.0: eth1: jumbo features [frames: 9200 bytes, tx checksumming: ko]
sd 0:0:0:0: Attached scsi generic sg0 type 0
sd 2:0:0:0: Attached scsi generic sg1 type 0
sd 3:0:0:0: Attached scsi generic sg2 type 0
piix4_smbus 0000:00:14.0: SMBus Host Controller at 0xb00, revision 0
udev: renamed network interface eth0 to eth2
8139cp: 10/100 PCI Ethernet driver v1.3 (Mar 22, 2004)
8139cp 0000:03:06.0: This (id 10ec:8139 rev 10) is not an 8139C+ compatible chip, use 8139too
8139too Fast Ethernet driver 0.9.28
  alloc irq_desc for 20 on node -1
  alloc kstat_irqs on node -1
8139too 0000:03:06.0: PCI INT A -> GSI 20 (level, low) -> IRQ 20
eth0: RealTek RTL8139 at 0xf8600000, XX:XX:XX:XX:XX:XX, IRQ 20
EXT4-fs (md3): mounted filesystem with ordered data mode. Opts: 
kjournald starting.  Commit interval 5 seconds
EXT3-fs (sdc1): using internal journal
EXT3-fs (sdc1): mounted filesystem with ordered data mode
kjournald starting.  Commit interval 5 seconds
EXT3-fs (sdb1): using internal journal
EXT3-fs (sdb1): mounted filesystem with ordered data mode
EXT4-fs (md6): mounted filesystem with ordered data mode. Opts: 
EXT4-fs (sda1): mounted filesystem with ordered data mode. Opts: 
Adding 2097148k swap on /dev/sdc5.  Priority:9 extents:1 across:2097148k 
Adding 2097148k swap on /dev/sdb5.  Priority:9 extents:1 across:2097148k 
NET: Registered protocol family 10
lo: Disabled Privacy Extensions
ip6_tables: (C) FCB9-52CA Netfilter Core Team
nf_conntrack version 0.5.0 (16384 buckets, 65536 max)
ip_tables: (C) FCB9-52CA Netfilter Core Team
eth0: link up, 100Mbps, full-duplex, lpa 0x45E1
r8169 0000:02:00.0: firmware: requesting rtl_nic/rtl8168e-3.fw
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link down
ADDRCONF(NETDEV_UP): eth1: link is not ready
r8169 0000:02:00.0: eth1: link up
ADDRCONF(NETDEV_CHANGE): eth1: link becomes ready
r8169 0000:01:00.0: firmware: requesting rtl_nic/rtl8168e-2.fw
r8169 0000:01:00.0: eth2: link down
ADDRCONF(NETDEV_UP): eth2: link is not ready
802.1Q VLAN Support v1.8 Ben Greear <XXX@XXX>
All bugs added by David S. Miller <XXX@XXX>
ADDRCONF(NETDEV_UP): eth2.205: link is not ready
Bridge firewalling registered
powernow-k8: Found 1 AMD A8-5500 APU with Radeon(tm) HD Graphics     (4 cpu cores) (version 2.20.00)
powernow-k8: Core Performance Boosting: on.
powernow-k8:    0 : pstate 0 (3200 MHz)
powernow-k8:    1 : pstate 1 (2900 MHz)
powernow-k8:    2 : pstate 2 (2600 MHz)
powernow-k8:    3 : pstate 3 (2200 MHz)
powernow-k8:    4 : pstate 4 (1800 MHz)
powernow-k8:    5 : pstate 5 (1400 MHz)
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: data-check of RAID array md3
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
Bluetooth: Core ver 2.15
NET: Registered protocol family 31
Bluetooth: HCI device and connection manager initialized
Bluetooth: HCI socket layer initialized
Netfilter messages via NETLINK v0.30.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: data-check of RAID array md3
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: data-check of RAID array md3
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: data-check of RAID array md3
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: data-check of RAID array md3
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: data-check of RAID array md3
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
md: data-check of RAID array md2
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 32504760k.
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: delaying data-check of md3 until md2 has finished (they share one or more physical units)
md: delaying data-check of md6 until md2 has finished (they share one or more physical units)
md: md2: data-check done.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: data-check of RAID array md3
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 19921848k.
md: delaying data-check of md6 until md3 has finished (they share one or more physical units)
md: md3: data-check done.
md: data-check of RAID array md6
md: minimum _guaranteed_  speed: 1000 KB/sec/disk.
md: using maximum available idle IO bandwidth (but not more than 200000 KB/sec) for data-check.
md: using 128k window, over a total of 921718352k.
md: md6: data-check done.
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
r8169 0000:02:00.0: eth1: link down
r8169 0000:02:00.0: eth1: link up
st: Version 20130315rh, fixed bufsize 32768, s/g segs 256
BIOS EDD facility v0.16 2004-Jun-25, 3 devices found
r8169 0000:01:00.0: invalid short VPD tag 05 at offset 2
r8169 0000:02:00.0: invalid short VPD tag 00 at offset 1
